#security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
#        in_memory: { memory: null }
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#        main:
#            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
#    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false
        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            form_login:
                provider: fos_userbundle
                check_path: /oauth/v2/auth_login_check
                login_path: /oauth/v2/auth_login
                use_referer: true
        api_cards:
            pattern: ^/api/cards
            fos_oauth: true
            stateless: true
            anonymous: true
        api_encounters:
            pattern: ^/api/encounters
            fos_oauth: true
            stateless: true
            anonymous: true
        api_gearlocs:
            pattern: ^/api/gearlocs
            fos_oauth: true
            stateless: true
            anonymous: true
        api_monthlys:
            pattern: ^/api/monthlys
            fos_oauth: true
            stateless: true
            anonymous: true
        api_tyrants:
            pattern: ^/api/tyrants
            fos_oauth: true
            stateless: true
            anonymous: true
        api_bats:
            pattern: ^/api/bats
            fos_oauth: true
            stateless: true
            anonymous: true
        api_current_challenges:
            pattern: ^/api/current
            fos_oauth: true
            stateless: true
            anonymous: true
        api_past_challenges:
            pattern: ^/api/past
            fos_oauth: true
            stateless: true
            anonymous: true
        api_generateRandomeEncounterAll:
            pattern: ^/api/generateRandomEncounterAll
            fos_oauth: true
            stateless: true
            anonymous: true
        api:
            pattern:    ^/api
            fos_oauth:  true
            stateless:  true
            anonymous:  false
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
            logout: true
            anonymous: true

    access_control:
        - { path: ^/api, roles: [ IS_AUTHENTICATED_ANONYMOUSLY ] }
        - { path: ^/api/card/add, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/api/encounter/add, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/api/gearloc/add, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/api/monthly/add, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/api/tyrant/add, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/api/bats/add, roles: [ IS_AUTHENTICATED_FULLY ] }
        - { path: ^/createClient, roles: [ IS_AUTHENTICATED_ANONYMOUSLY ] }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }